//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""14dd2dce-a3d9-42d5-9397-14cbab4de7bc"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""624c40c7-30bb-428e-b8ad-fdd6367967a9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""4e3a9d2e-2902-4665-8a50-158013e5bca3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeCameraStyle"",
                    ""type"": ""Button"",
                    ""id"": ""8fef37f6-9ef3-4555-92c5-2e4963e1e43b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SetRunning"",
                    ""type"": ""Button"",
                    ""id"": ""1f4284b1-e3e1-4e5f-9256-bec87df5c23d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BasePunches"",
                    ""type"": ""Button"",
                    ""id"": ""2a5576c7-423a-4063-b960-52dd92b8cb18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e9a5ab47-c489-4867-9dd0-75877e819784"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""809ef3d3-a416-48f1-a3db-7f12b1551088"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7b1988dd-c8e0-4039-bae1-591fb875e560"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""16fb7fd5-cbda-4c32-84c7-4a86c7ede691"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""91ecbdae-d559-4b9f-b5ea-2ebc93472cf6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c3ca9c9d-20f3-4655-ae64-ca3733a1590c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0169b9c0-92c3-4207-9dad-414dc3c442b2"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeCameraStyle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca35b737-5a3f-447e-b1c5-2bb88a4af83b"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SetRunning"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e716f28-ccd4-401f-bf88-c3807a6ce459"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BasePunches"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""StarPlatinum"",
            ""id"": ""732774c3-05ac-439f-9bd9-c40d55b65801"",
            ""actions"": [
                {
                    ""name"": ""Summon"",
                    ""type"": ""Button"",
                    ""id"": ""8f297c47-5b95-4b1c-a045-7aea21c20c00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BasePunches"",
                    ""type"": ""Button"",
                    ""id"": ""277f5f43-755b-43fc-a572-42cb1f286957"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Finisher"",
                    ""type"": ""Button"",
                    ""id"": ""b1a60b48-6936-4064-90c5-9e810fcf2e8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Barrage"",
                    ""type"": ""Button"",
                    ""id"": ""3c558282-71dd-48c8-84ba-b966d33507a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""01280c57-7878-41dc-95e1-76e3321105a4"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Summon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09df84e6-82c8-42a9-bb2f-1787b595765d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BasePunches"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14cc4681-2190-4ceb-8bde-26d4c1cf8dac"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Finisher"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96e3e59e-bb23-4fe0-992f-3c8859306185"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Barrage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_ChangeCameraStyle = m_Player.FindAction("ChangeCameraStyle", throwIfNotFound: true);
        m_Player_SetRunning = m_Player.FindAction("SetRunning", throwIfNotFound: true);
        m_Player_BasePunches = m_Player.FindAction("BasePunches", throwIfNotFound: true);
        // StarPlatinum
        m_StarPlatinum = asset.FindActionMap("StarPlatinum", throwIfNotFound: true);
        m_StarPlatinum_Summon = m_StarPlatinum.FindAction("Summon", throwIfNotFound: true);
        m_StarPlatinum_BasePunches = m_StarPlatinum.FindAction("BasePunches", throwIfNotFound: true);
        m_StarPlatinum_Finisher = m_StarPlatinum.FindAction("Finisher", throwIfNotFound: true);
        m_StarPlatinum_Barrage = m_StarPlatinum.FindAction("Barrage", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_ChangeCameraStyle;
    private readonly InputAction m_Player_SetRunning;
    private readonly InputAction m_Player_BasePunches;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @ChangeCameraStyle => m_Wrapper.m_Player_ChangeCameraStyle;
        public InputAction @SetRunning => m_Wrapper.m_Player_SetRunning;
        public InputAction @BasePunches => m_Wrapper.m_Player_BasePunches;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @ChangeCameraStyle.started += instance.OnChangeCameraStyle;
            @ChangeCameraStyle.performed += instance.OnChangeCameraStyle;
            @ChangeCameraStyle.canceled += instance.OnChangeCameraStyle;
            @SetRunning.started += instance.OnSetRunning;
            @SetRunning.performed += instance.OnSetRunning;
            @SetRunning.canceled += instance.OnSetRunning;
            @BasePunches.started += instance.OnBasePunches;
            @BasePunches.performed += instance.OnBasePunches;
            @BasePunches.canceled += instance.OnBasePunches;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @ChangeCameraStyle.started -= instance.OnChangeCameraStyle;
            @ChangeCameraStyle.performed -= instance.OnChangeCameraStyle;
            @ChangeCameraStyle.canceled -= instance.OnChangeCameraStyle;
            @SetRunning.started -= instance.OnSetRunning;
            @SetRunning.performed -= instance.OnSetRunning;
            @SetRunning.canceled -= instance.OnSetRunning;
            @BasePunches.started -= instance.OnBasePunches;
            @BasePunches.performed -= instance.OnBasePunches;
            @BasePunches.canceled -= instance.OnBasePunches;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // StarPlatinum
    private readonly InputActionMap m_StarPlatinum;
    private List<IStarPlatinumActions> m_StarPlatinumActionsCallbackInterfaces = new List<IStarPlatinumActions>();
    private readonly InputAction m_StarPlatinum_Summon;
    private readonly InputAction m_StarPlatinum_BasePunches;
    private readonly InputAction m_StarPlatinum_Finisher;
    private readonly InputAction m_StarPlatinum_Barrage;
    public struct StarPlatinumActions
    {
        private @PlayerControls m_Wrapper;
        public StarPlatinumActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Summon => m_Wrapper.m_StarPlatinum_Summon;
        public InputAction @BasePunches => m_Wrapper.m_StarPlatinum_BasePunches;
        public InputAction @Finisher => m_Wrapper.m_StarPlatinum_Finisher;
        public InputAction @Barrage => m_Wrapper.m_StarPlatinum_Barrage;
        public InputActionMap Get() { return m_Wrapper.m_StarPlatinum; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(StarPlatinumActions set) { return set.Get(); }
        public void AddCallbacks(IStarPlatinumActions instance)
        {
            if (instance == null || m_Wrapper.m_StarPlatinumActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_StarPlatinumActionsCallbackInterfaces.Add(instance);
            @Summon.started += instance.OnSummon;
            @Summon.performed += instance.OnSummon;
            @Summon.canceled += instance.OnSummon;
            @BasePunches.started += instance.OnBasePunches;
            @BasePunches.performed += instance.OnBasePunches;
            @BasePunches.canceled += instance.OnBasePunches;
            @Finisher.started += instance.OnFinisher;
            @Finisher.performed += instance.OnFinisher;
            @Finisher.canceled += instance.OnFinisher;
            @Barrage.started += instance.OnBarrage;
            @Barrage.performed += instance.OnBarrage;
            @Barrage.canceled += instance.OnBarrage;
        }

        private void UnregisterCallbacks(IStarPlatinumActions instance)
        {
            @Summon.started -= instance.OnSummon;
            @Summon.performed -= instance.OnSummon;
            @Summon.canceled -= instance.OnSummon;
            @BasePunches.started -= instance.OnBasePunches;
            @BasePunches.performed -= instance.OnBasePunches;
            @BasePunches.canceled -= instance.OnBasePunches;
            @Finisher.started -= instance.OnFinisher;
            @Finisher.performed -= instance.OnFinisher;
            @Finisher.canceled -= instance.OnFinisher;
            @Barrage.started -= instance.OnBarrage;
            @Barrage.performed -= instance.OnBarrage;
            @Barrage.canceled -= instance.OnBarrage;
        }

        public void RemoveCallbacks(IStarPlatinumActions instance)
        {
            if (m_Wrapper.m_StarPlatinumActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IStarPlatinumActions instance)
        {
            foreach (var item in m_Wrapper.m_StarPlatinumActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_StarPlatinumActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public StarPlatinumActions @StarPlatinum => new StarPlatinumActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnChangeCameraStyle(InputAction.CallbackContext context);
        void OnSetRunning(InputAction.CallbackContext context);
        void OnBasePunches(InputAction.CallbackContext context);
    }
    public interface IStarPlatinumActions
    {
        void OnSummon(InputAction.CallbackContext context);
        void OnBasePunches(InputAction.CallbackContext context);
        void OnFinisher(InputAction.CallbackContext context);
        void OnBarrage(InputAction.CallbackContext context);
    }
}
